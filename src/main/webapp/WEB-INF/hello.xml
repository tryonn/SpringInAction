<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-2.0.4.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-2.0.xsd"
	default-lazy-init="true">

<!-- 	<context:annotation-config /> -->
<!-- 	<context:component-scan base-package=" br.com.wordpress.tryonn.principal" /> -->

<!-- 	<bean id="dataSource" -->
<!-- 		class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
<!-- 		<property name="driverClassName" value="org.postgresql.Driver" /> -->
<!-- 		<property name="url" value="jdbc:postgresql://localhost:5432/M2MDev" /> -->
<!-- 		<property name="username" value="postgres" /> -->
<!-- 		<property name="password" value="masterkey" /> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="sessionFactory" -->
<!-- 		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 		<property name="packagesToScan" value="br.com.m2msolutions.server.domain"/> -->

<!-- 		<property name="hibernateProperties"> -->
<!-- 			<props> -->
<!-- 				<prop key="hibernate.query.substitutions">1</prop> -->
<!-- 				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop> -->
<!-- 				<prop key="hibernate.max_fetch_depth">3</prop> -->
<!-- 				<prop key="hibernate.default_batch_fetch_size">8</prop> -->
<!-- 				<prop key="hibernate.generate_statistics">false</prop> -->
<!-- 				<prop key="hibernate.c3p0.initialPoolSize">10</prop> -->
<!-- 				<prop key="hibernate.c3p0.minPoolSize">10</prop> -->
<!-- 				<prop key="hibernate.c3p0.maxPoolSize">40</prop> -->
<!-- 				<prop key="hibernate.c3p0.min_size">10</prop> -->
<!-- 				<prop key="hibernate.c3p0.max_size">40</prop> -->
<!-- 				<prop key="hibernate.c3p0.timeout">1800</prop> -->
<!-- 				<prop key="hibernate.c3p0.max_statements">50</prop> -->
<!-- 				<prop key="hibernate.connection.charSet">UTF8</prop> -->
<!-- 				<prop key="hibernate.cache.use_second_level_cache">false</prop> -->
<!-- 				<prop key="hibernate.hbm2ddl.auto">update</prop> -->
<!-- 				<prop key="hibernate.show_sql">true</prop> -->
<!-- 				<prop key="hibernate.format_sql">true</prop> -->
<!-- 				<prop key="hibernate.dialect">org.hibernatespatial.postgis.PostgisDialect</prop> -->
<!-- 				<prop key="transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory -->
<!-- 				</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<!-- Configurando o hibernateTemplate no Spring --> -->
<!-- 	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> -->
<!-- 		<property name="sessionFactory" ref="sessionFactory" /> -->
<!-- 		<property name="flushMode" value="3" /> -->
<!-- 	</bean> -->


<!-- 	<bean id="transactionManager" -->
<!-- 		class="org.springframework.orm.hibernate3.HibernateTransactionManager"> -->
<!-- 		<property name="sessionFactory" ref="sessionFactory" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="transactionProxyTemplate" abstract="true" -->
<!-- 		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"> -->
<!-- 		<property name="transactionManager" ref="transactionManager" /> -->
<!-- 		<property name="transactionAttributes"> -->
<!-- 			<props> -->
<!-- 				<prop key="save*">PROPAGATION_REQUIRED</prop> -->
<!-- 				<prop key="delete*">PROPAGATION_REQUIRED</prop> -->
<!-- 				<prop key="update*">PROPAGATION_REQUIRED</prop> -->
<!-- 				<prop key="executar*">PROPAGATION_REQUIRED</prop> -->
<!-- 				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->

<!-- 	<tx:annotation-driven transaction-manager="transactionManager" /> -->



	<!-- <bean name="openSessionInViewInterceptor" -->
	<!-- class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor"> -->
	<!-- <property name="sessionFactory" ref="sessionFactory" /> -->
	<!-- </bean> -->

	<!-- <bean id="beanMappings" -->
	<!-- class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" -->
	<!-- p:order="0" /> -->

	<!-- <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" -->
	<!-- p:order="1"> -->
	<!-- <property name="interceptors"> -->
	<!-- <list> -->
	<!-- <ref bean="openSessionInViewInterceptor" /> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- <property name="urlMap"> -->
	<!-- <map> -->
	<!-- <entry key="stateService" value-ref="stateController" /> -->
	<!-- </map> -->
	<!-- </property> -->
	<!-- </bean> -->


	<!-- BEGIN CONTROLLER -->
	<!-- <bean id="stateController" -->
	<!-- class="br.com.m2msolutions.server.dispatcher.GwtDispatcherServlet"> -->
	<!-- <property name="servletName" value="stateService" /> -->
	<!-- <property name="servletInstance" ref="stateService" /> -->
	<!-- </bean> -->
	<!-- END CONTROLLER -->

	<!-- BEGIN SERVICE -->
	<!-- <bean id="stateService" class="br.com.m2msolutions.server.StateServiceImpl" 
		/> -->
	<!-- END SERVICE -->

	<!-- BEGIN DAO -->
	<!-- <bean id="stateDAO" class="br.com.m2msolutions.server.dao.DaoState"> -->
	<!-- <property name="sessionFactory" ref="sessionFactory" /> -->
	<!-- </bean> -->
	<!-- END DAO -->
	
	
	<bean id="greetingService" class="br.com.wordpress.tryonn.chapter01.hello.GreetingServiceImpl;">
		<property name="greeting" value="Ola Mundo"/>
	</bean>

</beans>